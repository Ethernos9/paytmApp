{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:04.393Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:15.589Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:20.248Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:20.350Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:25.961Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:26.060Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:33.238Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:33.331Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:35.029Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:35.129Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:48.770Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:48.871Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:53.326Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:53.428Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:21:05.013Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:21:05.137Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:27:04.089Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:27:04.195Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:27:15.672Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:27:15.771Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:27:19.181Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:27:19.287Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:27:21.423Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:27:21.521Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:30:33.699Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:30:33.793Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:30:45.149Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:30:45.250Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:30:54.047Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:30:54.151Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:30:59.624Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:30:59.728Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:03.103Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:03.205Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:06.155Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:06.261Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:10.318Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:10.426Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:11.665Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:11.765Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:17.807Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:17.905Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:22.280Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:22.376Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:23.982Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:24.128Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:30.398Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:30.502Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:55.802Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:55.897Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:57.466Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:57.558Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:34:23.434Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:34:23.526Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:34:23.532Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:34:23.546Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:34:23.551Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:34:23.564Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:34:23.569Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:34:23.581Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:54:06.689Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:54:06.784Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.790Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.792Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.792Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.793Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:54:06.836Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.843Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:54:06.844Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.850Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:54:06.854Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:55:51.252Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:55:51.357Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:57:15.366Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:57:15.405Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:57:15.410Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:57:15.421Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:57:15.425Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:57:15.434Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:57:15.438Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:57:15.447Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:05:04.935Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:05:05.046Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.051Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.055Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.056Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.057Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:05.106Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.117Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:05.119Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.125Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:05.128Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:05:07.491Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:05:07.603Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.609Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.611Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.612Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.613Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.614Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.615Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:07.669Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:05:12.177Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:05:12.278Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.283Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.288Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.289Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.290Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.292Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.293Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:12.339Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:05:16.888Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:05:16.983Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.988Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.992Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.993Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.995Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.998Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.999Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:17.069Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:17.092Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:17.104Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:17.120Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:17.124Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:05:49.793Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:05:49.892Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.897Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.901Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.902Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.904Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.905Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.907Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.908Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.910Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:49.958Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.965Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:49.970Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.973Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:49.976Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.979Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:49.982Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:10:49.517Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:10:49.620Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:11:21.926Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:11:21.974Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:11:21.979Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:11:21.991Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:11:21.995Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:11:22.006Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:11:22.009Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:11:22.019Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:14.623Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:14.714Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:25.571Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:25.675Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:30.037Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:30.134Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:34.060Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:34.178Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:36.194Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:36.289Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:45.382Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:45.501Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:55.093Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:55.184Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:13:59.081Z"}
{"amount":"100","createdAt":"2025-01-01T06:13:59.123Z","description":"have fun ","id":9,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:13:59.133Z","updatedAt":"2025-01-01T06:13:59.123Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:14:53.653Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:14:53.751Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:15:00.272Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:15:00.374Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:22:28.646Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:22:28.743Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:25:14.248Z"}
{"amount":"100","createdAt":"2025-01-01T06:25:14.291Z","description":"have fun ","id":10,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:25:14.295Z","updatedAt":"2025-01-01T06:25:14.291Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:25:20.841Z"}
{"amount":"100","createdAt":"2025-01-01T06:25:20.856Z","description":"have fun ","id":11,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:25:20.855Z","updatedAt":"2025-01-01T06:25:20.856Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:26:16.941Z"}
{"amount":"100","createdAt":"2025-01-01T06:26:16.957Z","description":"have fun ","id":12,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:26:16.959Z","updatedAt":"2025-01-01T06:26:16.957Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:28:56.391Z"}
{"amount":"100","createdAt":"2025-01-01T06:28:56.402Z","description":"have fun ","id":13,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:28:56.405Z","updatedAt":"2025-01-01T06:28:56.402Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:28:58.377Z"}
{"amount":"100","createdAt":"2025-01-01T06:28:58.388Z","description":"have fun ","id":14,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:28:58.390Z","updatedAt":"2025-01-01T06:28:58.388Z"}
{"amount":349,"description":"recharge","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:32:25.759Z"}
{"amount":"349","createdAt":"2025-01-01T06:32:25.791Z","description":"recharge","id":15,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:32:25.796Z","updatedAt":"2025-01-01T06:32:25.791Z"}
{"amount":349,"description":"recharge","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:32:39.352Z"}
{"amount":"349","createdAt":"2025-01-01T06:32:39.363Z","description":"recharge","id":16,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:32:39.366Z","updatedAt":"2025-01-01T06:32:39.363Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:37:58.691Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:37:58.794Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:35.678Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:35.721Z","description":"lunch","id":17,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:35.728Z","updatedAt":"2025-01-01T06:38:35.721Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:38.392Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:38.406Z","description":"lunch","id":18,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:38.407Z","updatedAt":"2025-01-01T06:38:38.406Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:41.058Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:41.072Z","description":"lunch","id":19,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:41.074Z","updatedAt":"2025-01-01T06:38:41.072Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:42.707Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:42.720Z","description":"lunch","id":20,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:42.722Z","updatedAt":"2025-01-01T06:38:42.720Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:44.070Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:44.084Z","description":"lunch","id":21,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:44.085Z","updatedAt":"2025-01-01T06:38:44.084Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:45.423Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:45.436Z","description":"lunch","id":22,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:45.437Z","updatedAt":"2025-01-01T06:38:45.436Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:47.113Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:47.129Z","description":"lunch","id":23,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:47.131Z","updatedAt":"2025-01-01T06:38:47.129Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:49.282Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:49.296Z","description":"lunch","id":24,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:49.297Z","updatedAt":"2025-01-01T06:38:49.296Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:50.334Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:50.347Z","description":"lunch","id":25,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:50.348Z","updatedAt":"2025-01-01T06:38:50.347Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:51.427Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:51.442Z","description":"lunch","id":26,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:51.444Z","updatedAt":"2025-01-01T06:38:51.442Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:52.456Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:52.467Z","description":"lunch","id":27,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:52.467Z","updatedAt":"2025-01-01T06:38:52.467Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:53.416Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:53.429Z","description":"lunch","id":28,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:53.429Z","updatedAt":"2025-01-01T06:38:53.429Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:54.474Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:54.485Z","description":"lunch","id":29,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:54.486Z","updatedAt":"2025-01-01T06:38:54.485Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:38:55.491Z"}
{"amount":"200","createdAt":"2025-01-01T06:38:55.503Z","description":"lunch","id":30,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:38:55.503Z","updatedAt":"2025-01-01T06:38:55.503Z"}
{"amount":200,"description":"lunch","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T08:28:28.117Z"}
{"amount":"200","createdAt":"2025-01-01T08:28:28.200Z","description":"lunch","id":31,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T08:28:28.218Z","updatedAt":"2025-01-01T08:28:28.200Z"}
{"amount":200,"description":"spotify premium","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"4878563449","senderUserId":5,"timestamp":"2025-01-01T09:18:47.603Z"}
{"amount":"200","createdAt":"2025-01-01T09:18:47.669Z","description":"spotify premium","id":32,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"4878563449","senderUserId":5,"status":"SUCCESS","timestamp":"2025-01-01T09:18:47.680Z","updatedAt":"2025-01-01T09:18:47.669Z"}
{"amount":200,"description":"spotify premium","level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"4878563449","senderUserId":5,"timestamp":"2025-01-01T09:19:12.492Z"}
{"amount":"200","createdAt":"2025-01-01T09:19:12.511Z","description":"spotify premium","id":33,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"4878563449","senderUserId":5,"status":"SUCCESS","timestamp":"2025-01-01T09:19:12.514Z","updatedAt":"2025-01-01T09:19:12.511Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T16:13:19.931Z"}
{"level":"error","message":"Failed to connect to RabbitMQ: Socket closed abruptly during opening handshake","stack":"Error: Socket closed abruptly during opening handshake\n    at Socket.endWhileOpening (D:\\PayApp\\worker\\node_modules\\amqplib\\lib\\connection.js:214:19)\n    at Socket.emit (node:events:526:35)\n    at endReadableNT (node:internal/streams/readable:1408:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-01-01T16:13:19.992Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T17:02:01.293Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T17:02:01.440Z"}
{"amount":50,"level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"4878563449","senderUserId":5,"timestamp":"2025-01-01T17:03:01.342Z"}
{"amount":"50","createdAt":"2025-01-01T17:03:01.489Z","description":null,"id":34,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"4878563449","senderUserId":5,"status":"SUCCESS","timestamp":"2025-01-01T17:03:01.524Z","updatedAt":"2025-01-01T17:03:01.489Z"}
{"amount":100,"level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"4878563449","senderUserId":5,"timestamp":"2025-01-01T17:04:12.106Z"}
{"amount":"100","createdAt":"2025-01-01T17:04:12.139Z","description":null,"id":35,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"4878563449","senderUserId":5,"status":"SUCCESS","timestamp":"2025-01-01T17:04:12.140Z","updatedAt":"2025-01-01T17:04:12.139Z"}
{"amount":100,"level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"4878563449","senderUserId":5,"timestamp":"2025-01-01T17:10:58.919Z"}
{"amount":"100","createdAt":"2025-01-01T17:10:58.972Z","description":null,"id":36,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"4878563449","senderUserId":5,"status":"SUCCESS","timestamp":"2025-01-01T17:10:58.980Z","updatedAt":"2025-01-01T17:10:58.972Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-04T08:21:15.249Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-04T08:21:15.351Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-04T17:51:02.995Z"}
{"code":"ECONNREFUSED","level":"error","message":"Failed to connect to RabbitMQ:","stack":"AggregateError\n    at internalConnectMultiple (node:net:1114:18)\n    at afterConnectMultiple (node:net:1667:5)","timestamp":"2025-01-04T17:51:03.051Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-04T17:52:20.871Z"}
{"code":"ECONNREFUSED","level":"error","message":"Failed to connect to RabbitMQ:","stack":"AggregateError\n    at internalConnectMultiple (node:net:1114:18)\n    at afterConnectMultiple (node:net:1667:5)","timestamp":"2025-01-04T17:52:20.928Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-04T17:54:08.502Z"}
{"level":"error","message":"Failed to connect to RabbitMQ: Socket closed abruptly during opening handshake","stack":"Error: Socket closed abruptly during opening handshake\n    at Socket.endWhileOpening (D:\\PayApp\\worker\\node_modules\\amqplib\\lib\\connection.js:214:19)\n    at Socket.emit (node:events:526:35)\n    at endReadableNT (node:internal/streams/readable:1408:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-01-04T17:54:08.574Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-04T17:54:50.999Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-04T17:54:51.176Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-04T17:55:14.164Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-04T17:55:14.292Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-05T16:40:10.964Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-05T16:40:11.109Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-06T09:14:03.947Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-06T09:14:04.046Z"}
{"amount":10,"description":"spotify premium","level":"info","message":"Processing transaction:","receiverAccountNumber":"2192433414","receiverUserId":3,"senderAccountNumber":"3067505675","senderUserId":3,"timestamp":"2025-01-06T09:14:04.052Z"}
{"amount":"10","createdAt":"2025-01-06T09:14:04.135Z","description":"spotify premium","id":37,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2192433414","receiverUserId":3,"senderAccountNumber":"3067505675","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-06T09:14:04.146Z","updatedAt":"2025-01-06T09:14:04.135Z"}
{"amount":10,"description":"spotify premium","level":"info","message":"Processing transaction:","receiverAccountNumber":"2192433414","receiverUserId":3,"senderAccountNumber":"3067505675","senderUserId":3,"timestamp":"2025-01-06T09:16:34.341Z"}
{"amount":"10","createdAt":"2025-01-06T09:16:34.356Z","description":"spotify premium","id":38,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2192433414","receiverUserId":3,"senderAccountNumber":"3067505675","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-06T09:16:34.359Z","updatedAt":"2025-01-06T09:16:34.356Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-06T16:40:05.413Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-06T16:40:05.571Z"}
{"amount":10,"description":"spotify premium","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-06T16:40:05.579Z"}
{"amount":"10","createdAt":"2025-01-06T16:40:05.711Z","description":"spotify premium","id":71,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-06T16:40:05.720Z","updatedAt":"2025-01-06T16:40:05.711Z"}
{"amount":10,"description":"spotify premium","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-06T16:48:14.360Z"}
{"amount":"10","createdAt":"2025-01-06T16:48:14.419Z","description":"spotify premium","id":72,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-06T16:48:14.427Z","updatedAt":"2025-01-06T16:48:14.419Z"}
{"amount":5,"description":"spotify premium","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-06T16:48:20.758Z"}
{"amount":"5","createdAt":"2025-01-06T16:48:20.777Z","description":"spotify premium","id":73,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-06T16:48:20.780Z","updatedAt":"2025-01-06T16:48:20.777Z"}
{"amount":7,"description":"spotify premium","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-06T16:48:29.394Z"}
{"amount":"7","createdAt":"2025-01-06T16:48:29.419Z","description":"spotify premium","id":74,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-06T16:48:29.421Z","updatedAt":"2025-01-06T16:48:29.419Z"}
{"amount":9,"description":"spotify premium","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-06T16:48:36.168Z"}
{"amount":"9","createdAt":"2025-01-06T16:48:36.190Z","description":"spotify premium","id":75,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-06T16:48:36.193Z","updatedAt":"2025-01-06T16:48:36.190Z"}
{"amount":11,"description":"spotify premium","level":"info","message":"Processing transaction:","receiverAccountNumber":"2192433414","receiverUserId":3,"senderAccountNumber":"3067505675","senderUserId":3,"timestamp":"2025-01-06T16:52:00.244Z"}
{"amount":"11","createdAt":"2025-01-06T16:52:00.264Z","description":"spotify premium","id":76,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2192433414","receiverUserId":3,"senderAccountNumber":"3067505675","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-06T16:52:00.266Z","updatedAt":"2025-01-06T16:52:00.264Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-08T16:46:29.472Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-08T16:46:29.614Z"}
{"amount":"51","description":"have fun","level":"info","message":"Processing transaction:","receiverAccountNumber":"4878563449","receiverUserId":5,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-08T17:13:10.358Z"}
{"amount":"51","createdAt":"2025-01-08T17:13:10.506Z","description":"have fun","id":77,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"4878563449","receiverUserId":5,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-08T17:13:10.524Z","updatedAt":"2025-01-08T17:13:10.506Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-08T17:17:24.708Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-08T17:17:24.842Z"}
{"amount":"51","description":"have fun","level":"info","message":"Processing transaction:","receiverAccountNumber":"4878563449","receiverUserId":5,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-08T17:17:24.849Z"}
{"amount":"51","createdAt":"2025-01-08T17:17:24.916Z","description":"have fun","id":78,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"4878563449","receiverUserId":5,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-08T17:17:24.922Z","updatedAt":"2025-01-08T17:17:24.916Z"}
{"amount":"49","description":"top up ","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-08T18:14:26.792Z"}
{"amount":"49","createdAt":"2025-01-08T18:14:26.878Z","description":"top up ","id":79,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-08T18:14:26.896Z","updatedAt":"2025-01-08T18:14:26.878Z"}
{"amount":"600","description":"food","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-08T18:16:58.622Z"}
{"amount":"600","createdAt":"2025-01-08T18:16:58.652Z","description":"food","id":80,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-08T18:16:58.656Z","updatedAt":"2025-01-08T18:16:58.652Z"}
{"amount":"10","description":"toffee","level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-08T18:24:29.562Z"}
{"amount":"10","createdAt":"2025-01-08T18:24:29.625Z","description":"toffee","id":81,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-08T18:24:29.632Z","updatedAt":"2025-01-08T18:24:29.625Z"}
{"amount":"11","description":"","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-08T18:25:41.670Z"}
{"amount":"11","createdAt":"2025-01-08T18:25:41.710Z","description":"","id":82,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-08T18:25:41.714Z","updatedAt":"2025-01-08T18:25:41.710Z"}
{"amount":"7","description":"have tea","level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-08T18:39:03.489Z"}
{"amount":"7","createdAt":"2025-01-08T18:39:03.562Z","description":"have tea","id":83,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-08T18:39:03.568Z","updatedAt":"2025-01-08T18:39:03.562Z"}
{"amount":"7","description":"have tea","level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-08T18:44:50.194Z"}
{"amount":"7","createdAt":"2025-01-08T18:44:50.263Z","description":"have tea","id":84,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-08T18:44:50.272Z","updatedAt":"2025-01-08T18:44:50.263Z"}
{"amount":"7","description":"have tea","level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"3067505675","senderUserId":3,"timestamp":"2025-01-08T18:47:37.375Z"}
{"amount":"7","createdAt":"2025-01-08T18:47:37.406Z","description":"have tea","id":85,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"3067505675","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-08T18:47:37.411Z","updatedAt":"2025-01-08T18:47:37.406Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-08T18:49:20.552Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-08T18:49:20.704Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-09T05:40:11.173Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-09T05:40:11.276Z"}
{"amount":"7","description":"have tea","level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T05:44:42.884Z"}
{"amount":"7","createdAt":"2025-01-09T05:44:42.964Z","description":"have tea","id":86,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-09T05:44:42.975Z","updatedAt":"2025-01-09T05:44:42.964Z"}
{"amount":"10","description":"have bread","level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T05:49:10.517Z"}
{"amount":"10","createdAt":"2025-01-09T05:49:10.531Z","description":"have bread","id":87,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-09T05:49:10.533Z","updatedAt":"2025-01-09T05:49:10.531Z"}
{"amount":"10","description":"have bread","level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T05:49:21.390Z"}
{"amount":"10","createdAt":"2025-01-09T05:49:21.409Z","description":"have bread","id":88,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-09T05:49:21.411Z","updatedAt":"2025-01-09T05:49:21.409Z"}
{"amount":"1000","description":"gym","level":"info","message":"Processing transaction:","receiverAccountNumber":"2192433414","receiverUserId":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-09T05:50:00.890Z"}
{"amount":"1000","createdAt":"2025-01-09T05:50:00.924Z","description":"gym","id":89,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2192433414","receiverUserId":3,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-09T05:50:00.927Z","updatedAt":"2025-01-09T05:50:00.924Z"}
{"amount":null,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T05:53:03.890Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: \"2192433414\"\n  },\n  data: {\n    balance: {\n+     decrement: Decimal\n    }\n  }\n}\n\nArgument `decrement` must not be null.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: \"2192433414\"\n  },\n  data: {\n    balance: {\n+     decrement: Decimal\n    }\n  }\n}\n\nArgument `decrement` must not be null.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:544:26\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:542:24","timestamp":"2025-01-09T05:53:03.902Z"}
{"amount":null,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"retryCount":1,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T05:53:03.906Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: \"2192433414\"\n  },\n  data: {\n    balance: {\n+     decrement: Decimal\n    }\n  }\n}\n\nArgument `decrement` must not be null.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: \"2192433414\"\n  },\n  data: {\n    balance: {\n+     decrement: Decimal\n    }\n  }\n}\n\nArgument `decrement` must not be null.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:544:26\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:542:24","timestamp":"2025-01-09T05:53:03.914Z"}
{"amount":null,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"retryCount":2,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T05:53:03.918Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: \"2192433414\"\n  },\n  data: {\n    balance: {\n+     decrement: Decimal\n    }\n  }\n}\n\nArgument `decrement` must not be null.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: \"2192433414\"\n  },\n  data: {\n    balance: {\n+     decrement: Decimal\n    }\n  }\n}\n\nArgument `decrement` must not be null.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:544:26\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:542:24","timestamp":"2025-01-09T05:53:03.925Z"}
{"amount":null,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"retryCount":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T05:53:03.928Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: \"2192433414\"\n  },\n  data: {\n    balance: {\n+     decrement: Decimal\n    }\n  }\n}\n\nArgument `decrement` must not be null.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: \"2192433414\"\n  },\n  data: {\n    balance: {\n+     decrement: Decimal\n    }\n  }\n}\n\nArgument `decrement` must not be null.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:544:26\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:542:24","timestamp":"2025-01-09T05:53:03.935Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-09T07:32:48.273Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-09T07:32:48.423Z"}
{"amount":null,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T07:32:48.439Z"}
{"amount":null,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"retryCount":1,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T07:32:48.448Z"}
{"amount":null,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"retryCount":2,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T07:32:48.450Z"}
{"amount":null,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"retryCount":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T07:32:48.458Z"}
{"amount":null,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T07:32:48.461Z"}
{"amount":null,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"3067505675","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T07:32:48.463Z"}
{"amount":39,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T07:32:48.466Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: \"2192433414\"\n  },\n  data: {\n    balance: {\n+     decrement: Decimal\n    }\n  }\n}\n\nArgument `decrement` must not be null.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: \"2192433414\"\n  },\n  data: {\n    balance: {\n+     decrement: Decimal\n    }\n  }\n}\n\nArgument `decrement` must not be null.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:544:26\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:542:24","timestamp":"2025-01-09T07:32:48.560Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-09T07:35:23.588Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-09T07:35:23.729Z"}
{"amount":39,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"timestamp":"2025-01-09T07:35:35.183Z"}
{"amount":"39","createdAt":"2025-01-09T07:35:35.282Z","description":"top up","id":90,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"2192433414","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-09T07:35:35.300Z","updatedAt":"2025-01-09T07:35:35.282Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-09T07:40:53.530Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-09T07:40:53.673Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-10T16:15:20.598Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-10T16:15:20.746Z"}
{"amount":100,"description":"toffee","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-10T18:23:28.599Z"}
{"amount":"100","createdAt":"2025-01-10T18:23:28.710Z","description":"toffee","id":91,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-10T18:23:28.726Z","updatedAt":"2025-01-10T18:23:28.710Z"}
{"amount":100,"description":"toffee","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-10T18:23:41.062Z"}
{"amount":"100","createdAt":"2025-01-10T18:23:41.075Z","description":"toffee","id":92,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-10T18:23:41.077Z","updatedAt":"2025-01-10T18:23:41.075Z"}
{"amount":100,"description":"toffee","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-10T18:26:17.192Z"}
{"amount":"100","createdAt":"2025-01-10T18:26:17.211Z","description":"toffee","id":93,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-10T18:26:17.212Z","updatedAt":"2025-01-10T18:26:17.211Z"}
{"amount":100,"description":"fun","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-10T18:27:16.902Z"}
{"amount":"100","createdAt":"2025-01-10T18:27:16.917Z","description":"fun","id":94,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-10T18:27:16.919Z","updatedAt":"2025-01-10T18:27:16.917Z"}
{"amount":500,"description":"movie","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-10T18:31:57.168Z"}
{"amount":"500","createdAt":"2025-01-10T18:31:57.235Z","description":"movie","id":95,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-10T18:31:57.244Z","updatedAt":"2025-01-10T18:31:57.235Z"}
{"amount":500,"description":"movie,popccorn","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-10T18:36:17.480Z"}
{"amount":"500","createdAt":"2025-01-10T18:36:17.503Z","description":"movie,popccorn","id":96,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-10T18:36:17.508Z","updatedAt":"2025-01-10T18:36:17.503Z"}
{"amount":500,"description":"movie,popccorn","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-10T18:36:42.398Z"}
{"amount":"500","createdAt":"2025-01-10T18:36:42.423Z","description":"movie,popccorn","id":97,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-10T18:36:42.429Z","updatedAt":"2025-01-10T18:36:42.423Z"}
{"amount":1,"description":"","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-10T18:39:19.248Z"}
{"amount":"1","createdAt":"2025-01-10T18:39:19.322Z","description":"","id":98,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-10T18:39:19.332Z","updatedAt":"2025-01-10T18:39:19.322Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-11T06:08:52.552Z"}
{"level":"error","message":"Failed to connect to RabbitMQ: Socket closed abruptly during opening handshake","stack":"Error: Socket closed abruptly during opening handshake\n    at Socket.endWhileOpening (D:\\PayApp\\worker\\node_modules\\amqplib\\lib\\connection.js:214:19)\n    at Socket.emit (node:events:526:35)\n    at endReadableNT (node:internal/streams/readable:1408:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-01-11T06:08:52.621Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-11T06:09:17.499Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-11T06:09:17.604Z"}
{"amount":11,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-11T06:16:02.475Z"}
{"amount":"11","createdAt":"2025-01-11T06:16:02.580Z","description":"top up","id":99,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-11T06:16:02.596Z","updatedAt":"2025-01-11T06:16:02.580Z"}
{"amount":300,"description":"return","level":"info","message":"Processing transaction:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"5289967247","senderUserId":6,"timestamp":"2025-01-11T06:49:39.299Z"}
{"amount":"300","createdAt":"2025-01-11T06:49:39.333Z","description":"return","id":100,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"6591699264","receiverUserId":3,"senderAccountNumber":"5289967247","senderUserId":6,"status":"SUCCESS","timestamp":"2025-01-11T06:49:39.339Z","updatedAt":"2025-01-11T06:49:39.333Z"}
{"amount":11,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"8859343635","receiverUserId":1,"senderAccountNumber":"6163518723","senderUserId":1,"timestamp":"2025-01-11T11:07:48.331Z"}
{"clientVersion":"6.1.0","code":"P2025","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","meta":{"cause":"Record to update not found.","modelName":"Account"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.account.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:7315)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:544:26\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:542:24","timestamp":"2025-01-11T11:07:48.499Z"}
{"amount":11,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"8859343635","receiverUserId":1,"retryCount":1,"senderAccountNumber":"6163518723","senderUserId":1,"timestamp":"2025-01-11T11:07:48.507Z"}
{"clientVersion":"6.1.0","code":"P2025","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","meta":{"cause":"Record to update not found.","modelName":"Account"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.account.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:7315)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:544:26\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:542:24","timestamp":"2025-01-11T11:07:48.531Z"}
{"amount":11,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"8859343635","receiverUserId":1,"retryCount":2,"senderAccountNumber":"6163518723","senderUserId":1,"timestamp":"2025-01-11T11:07:48.537Z"}
{"clientVersion":"6.1.0","code":"P2025","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","meta":{"cause":"Record to update not found.","modelName":"Account"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.account.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:7315)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:544:26\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:542:24","timestamp":"2025-01-11T11:07:48.555Z"}
{"amount":11,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"8859343635","receiverUserId":1,"retryCount":3,"senderAccountNumber":"6163518723","senderUserId":1,"timestamp":"2025-01-11T11:07:48.562Z"}
{"clientVersion":"6.1.0","code":"P2025","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","meta":{"cause":"Record to update not found.","modelName":"Account"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.account.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:7315)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:544:26\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:542:24","timestamp":"2025-01-11T11:07:48.578Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-11T11:10:28.677Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-11T11:10:28.817Z"}
{"amount":11,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"8859343635","receiverUserId":1,"senderAccountNumber":"6163518723","senderUserId":1,"timestamp":"2025-01-11T11:10:28.827Z"}
{"amount":11,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"8859343635","receiverUserId":1,"retryCount":1,"senderAccountNumber":"6163518723","senderUserId":1,"timestamp":"2025-01-11T11:10:28.835Z"}
{"amount":11,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"8859343635","receiverUserId":1,"retryCount":2,"senderAccountNumber":"6163518723","senderUserId":1,"timestamp":"2025-01-11T11:10:28.838Z"}
{"amount":11,"description":"top up","level":"info","message":"Processing transaction:","receiverAccountNumber":"8859343635","receiverUserId":1,"retryCount":3,"senderAccountNumber":"6163518723","senderUserId":1,"timestamp":"2025-01-11T11:10:28.841Z"}
{"amount":"11","createdAt":"2025-01-11T11:10:31.370Z","description":"top up","id":1,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"8859343635","receiverUserId":1,"senderAccountNumber":"6163518723","senderUserId":1,"status":"SUCCESS","timestamp":"2025-01-11T11:10:32.031Z","updatedAt":"2025-01-11T11:10:31.370Z"}
{"amount":"11","createdAt":"2025-01-11T11:10:33.684Z","description":"top up","id":2,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"8859343635","receiverUserId":1,"senderAccountNumber":"6163518723","senderUserId":1,"status":"SUCCESS","timestamp":"2025-01-11T11:10:33.951Z","updatedAt":"2025-01-11T11:10:33.684Z"}
{"amount":"11","createdAt":"2025-01-11T11:10:34.349Z","description":"top up","id":3,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"8859343635","receiverUserId":1,"senderAccountNumber":"6163518723","senderUserId":1,"status":"SUCCESS","timestamp":"2025-01-11T11:10:34.875Z","updatedAt":"2025-01-11T11:10:34.349Z"}
{"amount":"11","createdAt":"2025-01-11T11:10:35.277Z","description":"top up","id":4,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"8859343635","receiverUserId":1,"senderAccountNumber":"6163518723","senderUserId":1,"status":"SUCCESS","timestamp":"2025-01-11T11:10:35.560Z","updatedAt":"2025-01-11T11:10:35.277Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-11T11:25:05.136Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-11T11:25:05.273Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-11T11:34:25.093Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-11T11:34:25.240Z"}
{"amount":100,"description":"Fun","level":"info","message":"Processing transaction:","receiverAccountNumber":"1395527800","receiverUserId":1,"senderAccountNumber":"3397712924","senderUserId":1,"timestamp":"2025-01-11T11:36:48.254Z"}
{"amount":"100","createdAt":"2025-01-11T11:36:49.977Z","description":"Fun","id":1,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"1395527800","receiverUserId":1,"senderAccountNumber":"3397712924","senderUserId":1,"status":"SUCCESS","timestamp":"2025-01-11T11:36:50.387Z","updatedAt":"2025-01-11T11:36:49.977Z"}
{"amount":1100,"description":"gym","level":"info","message":"Processing transaction:","receiverAccountNumber":"4827146560","receiverUserId":2,"senderAccountNumber":"3397712924","senderUserId":1,"timestamp":"2025-01-11T11:41:42.843Z"}
{"amount":"1100","createdAt":"2025-01-11T11:41:43.431Z","description":"gym","id":2,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"4827146560","receiverUserId":2,"senderAccountNumber":"3397712924","senderUserId":1,"status":"SUCCESS","timestamp":"2025-01-11T11:41:43.572Z","updatedAt":"2025-01-11T11:41:43.431Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-11T16:38:12.117Z"}
{"level":"error","message":"Failed to connect to RabbitMQ: Socket closed abruptly during opening handshake","stack":"Error: Socket closed abruptly during opening handshake\n    at Socket.endWhileOpening (D:\\PayApp\\worker\\node_modules\\amqplib\\lib\\connection.js:214:19)\n    at Socket.emit (node:events:526:35)\n    at endReadableNT (node:internal/streams/readable:1408:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)","timestamp":"2025-01-11T16:38:12.182Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-11T16:38:40.828Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-11T16:38:40.974Z"}
{"amount":300,"description":"return","level":"info","message":"Processing transaction:","receiverAccountNumber":"3397712924","receiverUserId":1,"senderAccountNumber":"7809994971","senderUserId":3,"timestamp":"2025-01-11T16:44:12.715Z"}
{"amount":"300","createdAt":"2025-01-11T16:44:16.644Z","description":"return","id":3,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"3397712924","receiverUserId":1,"senderAccountNumber":"7809994971","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-11T16:44:17.037Z","updatedAt":"2025-01-11T16:44:16.644Z"}
{"amount":300,"description":"return","level":"info","message":"Processing transaction:","receiverAccountNumber":"4827146560","receiverUserId":2,"senderAccountNumber":"7809994971","senderUserId":3,"timestamp":"2025-01-11T16:44:48.099Z"}
{"amount":"300","createdAt":"2025-01-11T16:44:48.636Z","description":"return","id":4,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"4827146560","receiverUserId":2,"senderAccountNumber":"7809994971","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-11T16:44:48.751Z","updatedAt":"2025-01-11T16:44:48.636Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-11T16:53:16.821Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-11T16:53:18.206Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-11T17:00:32.055Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-11T17:00:33.297Z"}
