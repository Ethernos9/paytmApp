{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:04.393Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:15.589Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:20.248Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:20.350Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:25.961Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:26.060Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:33.238Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:33.331Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:35.029Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:35.129Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:48.770Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:48.871Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:20:53.326Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:20:53.428Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:21:05.013Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:21:05.137Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:27:04.089Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:27:04.195Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:27:15.672Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:27:15.771Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:27:19.181Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:27:19.287Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:27:21.423Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:27:21.521Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:30:33.699Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:30:33.793Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:30:45.149Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:30:45.250Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:30:54.047Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:30:54.151Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:30:59.624Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:30:59.728Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:03.103Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:03.205Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:06.155Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:06.261Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:10.318Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:10.426Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:11.665Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:11.765Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:17.807Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:17.905Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:22.280Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:22.376Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:23.982Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:24.128Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:30.398Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:30.502Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:55.802Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:55.897Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:31:57.466Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:31:57.558Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:34:23.434Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:34:23.526Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:34:23.532Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:34:23.546Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:34:23.551Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:34:23.564Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:34:23.569Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:34:23.581Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:54:06.689Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:54:06.784Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.790Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.792Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.792Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.793Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:54:06.836Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.843Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:54:06.844Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:54:06.850Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:54:06.854Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T05:55:51.252Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T05:55:51.357Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:57:15.366Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:57:15.405Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:57:15.410Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:57:15.421Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:57:15.425Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:57:15.434Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T05:57:15.438Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:538:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:530:24","timestamp":"2025-01-01T05:57:15.447Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:05:04.935Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:05:05.046Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.051Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.055Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.056Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.057Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:05.106Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.117Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:05.119Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:05.125Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:05.128Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:05:07.491Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:05:07.603Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.609Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.611Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.612Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.613Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.614Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:07.615Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:07.669Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:05:12.177Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:05:12.278Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.283Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.288Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.289Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.290Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.292Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:12.293Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:12.339Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:05:16.888Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:05:16.983Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.988Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.992Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.993Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.995Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.998Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:16.999Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:17.069Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:17.092Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:17.104Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:17.120Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:17.124Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:05:49.793Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:05:49.892Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.897Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.901Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.902Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.904Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.905Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.907Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.908Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.910Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:49.958Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.965Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:49.970Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.973Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:49.976Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:05:49.979Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:05:49.982Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:10:49.517Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:10:49.620Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:11:21.926Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:11:21.974Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":1,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:11:21.979Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:11:21.991Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":2,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:11:21.995Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:11:22.006Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverUserId":4,"retryCount":3,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:11:22.009Z"}
{"clientVersion":"6.1.0","level":"error","message":"Transaction failed: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.account.update()` invocation:\n\n{\n  where: {\n    accountNumber: undefined,\n?   AND?: AccountWhereInput | AccountWhereInput[],\n?   OR?: AccountWhereInput[],\n?   NOT?: AccountWhereInput | AccountWhereInput[],\n?   userId?: IntFilter | Int,\n?   accountType?: StringFilter | String,\n?   balance?: DecimalFilter | Decimal,\n?   isDeleted?: BoolFilter | Boolean,\n?   isDefault?: BoolFilter | Boolean,\n?   createdAt?: DateTimeFilter | DateTime,\n?   updatedAt?: DateTimeFilter | DateTime,\n?   user?: UserScalarRelationFilter | UserWhereInput,\n?   senderTransactions?: TransactionListRelationFilter,\n?   receiverTransactions?: TransactionListRelationFilter\n  },\n  data: {\n    balance: {\n      increment: 100\n    }\n  }\n}\n\nArgument `where` of type AccountWhereUniqueInput needs at least one of `accountNumber` arguments. Available options are marked with ?.\n    at wn (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at qn.handleRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at qn.handleAndLogRequestError (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6640)\n    at qn.request (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:121:6347)\n    at async l (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:9616)\n    at async file:///D:/PayApp/worker/index.js:539:11\n    at async Proxy._transactionWithCallback (D:\\PayApp\\worker\\node_modules\\@prisma\\client\\runtime\\library.js:130:7983)\n    at async file:///D:/PayApp/worker/index.js:531:24","timestamp":"2025-01-01T06:11:22.019Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:14.623Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:14.714Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:25.571Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:25.675Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:30.037Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:30.134Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:34.060Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:34.178Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:36.194Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:36.289Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:45.382Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:45.501Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:13:55.093Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:13:55.184Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:13:59.081Z"}
{"amount":"100","createdAt":"2025-01-01T06:13:59.123Z","description":"have fun ","id":9,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:13:59.133Z","updatedAt":"2025-01-01T06:13:59.123Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:14:53.653Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:14:53.751Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:15:00.272Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:15:00.374Z"}
{"level":"info","message":"Connecting to RabbitMQ...","timestamp":"2025-01-01T06:22:28.646Z"}
{"level":"info","message":"Worker connected to RabbitMQ","timestamp":"2025-01-01T06:22:28.743Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:25:14.248Z"}
{"amount":"100","createdAt":"2025-01-01T06:25:14.291Z","description":"have fun ","id":10,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:25:14.295Z","updatedAt":"2025-01-01T06:25:14.291Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:25:20.841Z"}
{"amount":"100","createdAt":"2025-01-01T06:25:20.856Z","description":"have fun ","id":11,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:25:20.855Z","updatedAt":"2025-01-01T06:25:20.856Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:26:16.941Z"}
{"amount":"100","createdAt":"2025-01-01T06:26:16.957Z","description":"have fun ","id":12,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:26:16.959Z","updatedAt":"2025-01-01T06:26:16.957Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:28:56.391Z"}
{"amount":"100","createdAt":"2025-01-01T06:28:56.402Z","description":"have fun ","id":13,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:28:56.405Z","updatedAt":"2025-01-01T06:28:56.402Z"}
{"amount":100,"description":"have fun ","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:28:58.377Z"}
{"amount":"100","createdAt":"2025-01-01T06:28:58.388Z","description":"have fun ","id":14,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:28:58.390Z","updatedAt":"2025-01-01T06:28:58.388Z"}
{"amount":349,"description":"recharge","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:32:25.759Z"}
{"amount":"349","createdAt":"2025-01-01T06:32:25.791Z","description":"recharge","id":15,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:32:25.796Z","updatedAt":"2025-01-01T06:32:25.791Z"}
{"amount":349,"description":"recharge","level":"info","message":"Processing transaction:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"timestamp":"2025-01-01T06:32:39.352Z"}
{"amount":"349","createdAt":"2025-01-01T06:32:39.363Z","description":"recharge","id":16,"isDeleted":false,"level":"info","message":"Transaction successful:","receiverAccountNumber":"2610366574","receiverUserId":4,"senderAccountNumber":"6591699264","senderUserId":3,"status":"SUCCESS","timestamp":"2025-01-01T06:32:39.366Z","updatedAt":"2025-01-01T06:32:39.363Z"}
